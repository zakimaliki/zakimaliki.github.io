{"ast":null,"code":"var _jsxFileName = \"/Users/zakimaliki/web/src/elements/Lists.js\";\nimport React from \"react\";\nimport propTypes from \"prop-types\";\nexport default function Lists(props) {\n  const className = [\"list-reset\"];\n  className.push(props.className);\n  if (props.isSmall) className.push(\"text-xs\");\n  return React.createElement(\"ul\", {\n    className: className.join(\" \"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, props.data.map((list, index) => {\n    return React.createElement(\"li\", {\n      key: index,\n      className: list.isChecked ? \"is-checked\" : \"\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, list.content);\n  }));\n}\nLists.propTypes = {\n  className: propTypes.string,\n  data: propTypes.array,\n  isSmall: propTypes.bool\n};","map":{"version":3,"sources":["/Users/zakimaliki/web/src/elements/Lists.js"],"names":["React","propTypes","Lists","props","className","push","isSmall","join","data","map","list","index","isChecked","content","string","array","bool"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACnC,QAAMC,SAAS,GAAG,CAAC,YAAD,CAAlB;AACAA,EAAAA,SAAS,CAACC,IAAV,CAAeF,KAAK,CAACC,SAArB;AACA,MAAID,KAAK,CAACG,OAAV,EAAmBF,SAAS,CAACC,IAAV,CAAe,SAAf;AACnB,SACE;AAAI,IAAA,SAAS,EAAED,SAAS,CAACG,IAAV,CAAe,GAAf,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,IAAN,CAAWC,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC/B,WACE;AAAI,MAAA,GAAG,EAAEA,KAAT;AAAgB,MAAA,SAAS,EAAED,IAAI,CAACE,SAAL,GAAiB,YAAjB,GAAgC,EAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,IAAI,CAACG,OADR,CADF;AAKD,GANA,CADH,CADF;AAWD;AAEDX,KAAK,CAACD,SAAN,GAAkB;AAChBG,EAAAA,SAAS,EAAEH,SAAS,CAACa,MADL;AAEhBN,EAAAA,IAAI,EAAEP,SAAS,CAACc,KAFA;AAGhBT,EAAAA,OAAO,EAAEL,SAAS,CAACe;AAHH,CAAlB","sourcesContent":["import React from \"react\";\n\nimport propTypes from \"prop-types\";\n\nexport default function Lists(props) {\n  const className = [\"list-reset\"];\n  className.push(props.className);\n  if (props.isSmall) className.push(\"text-xs\");\n  return (\n    <ul className={className.join(\" \")}>\n      {props.data.map((list, index) => {\n        return (\n          <li key={index} className={list.isChecked ? \"is-checked\" : \"\"}>\n            {list.content}\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nLists.propTypes = {\n  className: propTypes.string,\n  data: propTypes.array,\n  isSmall: propTypes.bool\n};\n"]},"metadata":{},"sourceType":"module"}